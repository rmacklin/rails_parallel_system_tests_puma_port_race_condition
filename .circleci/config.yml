# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.5-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-ruby-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-ruby-dependencies-

      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-ruby-dependencies-{{ checksum "Gemfile.lock" }}

#      - restore_cache:
#          keys:
#            - v1-node-dependencies-{{ checksum "yarn.lock" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-node-dependencies-
#
#      - run: bin/yarn
#
#      - save_cache:
#          paths:
#            - ./node_modules
#          key: v1-node-dependencies-{{ checksum "yarn.lock" }}
#
#      - run: RAILS_ENV=test bundle exec rails webpacker:compile

#      # Database setup
#      - run: bundle exec rake db:create
#      - run: bundle exec rake db:schema:load

      # run tests!
      - run: bin/rails test:system
      - run: bin/rails test:system
      - run: bin/rails test:system
      - run: bin/rails test:system
      - run: bin/rails test:system
      - run: bin/rails test:system
      - run: bin/rails test:system
      - run: bin/rails test:system
      - run: bin/rails test:system
      - run: bin/rails test:system

      # collect reports
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: test/reports
